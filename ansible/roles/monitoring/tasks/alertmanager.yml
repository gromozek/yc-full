- name: Create the Alertmanager group
  group:
    name: "{{ alertmanager_group }}"
    system: true

- name: Create the Alertmanager user
  user:
    name: "{{ alertmanager_user }}"
    group: "{{ alertmanager_group }}"
    system: yes
    createhome: no

- name: Make sure the Alertmanager install directory exists
  file:
    dest: "{{ alertmanager_install_path }}/alertmanager"
    state: directory
    owner: "root"
    group: "root"
    mode: 0755

- name: Download Alertmanager
  unarchive:
    src: "{{ alertmanager_release_url }}"
    dest: "{{ alertmanager_install_path }}/alertmanager"
    creates: "{{ alertmanager_install_path }}/alertmanager/alertmanager.yml"
    remote_src: yes
    extra_opts: [--strip-components=1]

- name: Symlink the Alertmanager binaries
  file:
    src: "{{ alertmanager_install_path }}/alertmanager/{{ item }}"
    dest: "{{ alertmanager_bin_path }}/{{ item }}"
    state: link
  notify: restart alertmanager
  with_items:
    - alertmanager
    - amtool

- name: Create the Alertmanager Storage directory
  file:
    name: "{{ alertmanager_storage_path }}"
    state: directory
    owner: "{{ alertmanager_user }}"
    group: "{{ alertmanager_group }}"
    mode: 0755

- name: Create the Alertmanager configuration directory
  file:
    name: "{{ alertmanager_config_path }}"
    state: directory
    owner: "{{ alertmanager_user }}"
    group: "{{ alertmanager_group }}"
    mode: 0755

- name: Create the Alertmanager templates directory
  file:
    name: "{{ alertmanager_templates_path }}"
    state: directory
    owner: "{{ alertmanager_user }}"
    group: "{{ alertmanager_group }}"
    mode: 0755

- name: Create the Alertmanager configuration file
  template:
    src: alertmanager.yml.j2
    dest: "{{ alertmanager_config_path }}/{{ alertmanager_config_file }}"
    owner: "{{ alertmanager_user }}"
    group: "{{ alertmanager_group }}"
    mode: 0640
    validate: "{{ alertmanager_bin_path }}/amtool check-config %s"
  notify: reload alertmanager

#- name: Create the Alertmanager template files
#  copy:
#    content: "{{ item.value }}"
#    dest: "{{ alertmanager_templates_path }}/{{ item.key }}.tmpl"
#    owner: "{{ alertmanager_user }}"
#    group: "{{ alertmanager_group }}"
#    mode: 0640
#  with_dict: "{{ alertmanager_templates }}"
#  notify: reload alertmanager

- name: Create the Systemd Unit file for the Alertmanager service
  template:
    src: alertmanager.systemd.j2
    dest: /etc/systemd/system/alertmanager.service
    owner: root
    group: root
    mode: 0640
  notify: reload systemd and restart alertmanager
  when: ansible_service_mgr == "systemd"

- name: Create the Upstart Unit file for the Alertmanager service
  template:
    src: alertmanager.upstart.j2
    dest: /etc/init/alertmanager.conf
    owner: root
    group: root
    mode: 0640
  notify: restart alertmanager
  when: ansible_service_mgr == "upstart"

- name: Create the generic start-stop script for the Alertmanager service
  template:
    src: alertmanager.service.j2
    dest: /etc/init.d/alertmanager
    owner: root
    group: root
    mode: 0750
  notify: restart alertmanager
  when: ansible_service_mgr not in [ "systemd", "upstart" ]
